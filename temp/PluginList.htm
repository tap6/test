<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="GB2312" />
	<title>插件列表</title>
	<link rel="stylesheet" href="../layui/css/layui.css" />
	<style type="text/css" media="screen">
		.layui-tab-title{
			position: relative;
		}
		.search{
			position: absolute;
			top: 5px;
			right: 8px;
			width: 250px;
		}
		.search .layui-input{
			height: 34px;
			padding-left: 28px;
		}
		.search ._icon{
			position: absolute;
			top: 9px;
			left: 8px;
			color: #999;
		}
		.search ._return{
			position: absolute;
			top: 9px;
			right: 8px;
			color: #999;
			cursor: pointer;
		}
		.layui-table th.center {
		    text-align: center;
		}

		td.center{
			text-align: center;
		}
		td.center a span{
			font-size: 1.5em;
		}
		td.right{
			text-align: right;
		}
		td.right a span{
			font-size: 1.3em;
		}

		td span.describe{
			color: #AAA;
			padding-top: 5px;
			padding-left: 17px;
			display: inline-block;
		}
		td a.del{
			display: none;
		}
		/*因为使用了 label + margin-right: 10px 所以这里就不要边距了*/
		td span.layui-badge,.layui-badge-rim{
			margin-left: 0px;
		}
		tr{
			background: #F2F2F2;
		}
		tr:hover{
			background: white !important;
		}
		tr.ed{
			background: white;
		}
		tr td label{
			cursor: pointer !important;
			margin-right: 10px;
		}
		.layui-tab{
			margin: 5px 0 0 0;
		}
		.info span{
			color: #888;
		}
		#info table td{
			background: white!important;
		}
		#info table td span.layui-badge, .layui-badge-rim{
			margin-left: 0!important;
		}
	</style>
</head>
<body style="overflow-y : scroll;">
<div class="layui-tab layui-tab-brief" lay-filter="docDemoTabBrief">
	<ul class="layui-tab-title">
		<li lay-id="all" class="layui-this">全部</li>
		<li lay-id="enable">已启用</li>
		<li lay-id="ban">未启用</li>
	</ul>
	<div class="search">
		<span class="layui-icon _icon">&#xe615;</span>
		<span class="layui-icon _return" id="return">&#x1007;</span>
		<input type="text" class="layui-input color" value="" placeholder="请输入插件名称，回车搜索" id="search" />
	</div>

	<div class="layui-tab-content" style="height: 100px;">
		<div class="layui-tab-item layui-show">
			<table class="layui-table" lay-skin="line">
				<thead>
					<tr>
						<th>
							名称/作者
							<a href="javascript:;" style="margin-left: 10px;" onclick="pluginList=[];parent.LoadPlugin();">
								<span style="color: #1E9FFF">刷新列表</span>
							</a>
							<a href="javascript:;" style="margin-left: 10px;" onclick="openFile()">
								<span style="color: #FF5722">导入插件</span>
							</a>
						</th>
						<th width="80" class="center">
							&nbsp;&nbsp;
							<a href="javascript:;" onclick="adminDel(this);">
								管理
							</a>
						</th>
					</tr>
				</thead>
				<tbody id="pluginlist">
				</tbody>
			</table>
		</div>
	</div>

	<div id="info" style="display: none; width: 100%">
		<table class="layui-table" style="width: 96%;margin-left: 2%;">
			<tbody>
				<tr>
					<th width="60">插件名称</th>
					<td name="name"></td>
				</tr>

				<tr>
					<th>插件版本</th>
					<td name="version"></td>
				</tr>

				<tr>
					<th>插件描述</th>
					<td name="describe"></td>
				</tr>

				<tr>
					<th>插件作者</th>
					<td name="author"></td>
				</tr>

				<tr>
					<th>插件标识</th>
					<td name="flag"></td>
				</tr>

				<tr>
					<th>插件路径</th>
					<td name="dllFile"></td>
				</tr>

				<tr>
					<th>插件配置</th>
					<td name="config"></td>
				</tr>
				<tr>
					<th>支持易语言版本</th>
					<td name="verRequest"></td>
				</tr>
				<tr>
					<th>依赖插件</th>
					<td name="pluginRequest"></td>
				</tr>

			</tbody>
		</table>
	</div>
</div>
<script type="text/javascript" src="../layui/layui.js"></script>
<script type="text/javascript" src="../js/jquery.js"></script>
<script type="text/javascript">
var form, pluginList=[], _index=0, Admin=false, word='', type='all';
layui.config({"isOutAnim":false, "anim":-1});
layui.use(["form","element"], function(){
	layer.config({"isOutAnim":false, "anim":-1});
	var element = layui.element;
	element.on('tab', function(data){
		type = $(this).attr('lay-id');
		$("#return").click();
		refreshByType();
	});

	$("#search").keyup(function(e) {
		if (e.keyCode == 13) {
			word = this.value;
			pluginList = [];
			parent.LoadPlugin();
		}
	});
	$("#return").click(function() {
		word = '';
		pluginList = [];
		parent.LoadPlugin();
	});

	form = layui.form;
	parent.LoadPlugin();
});

function adminDel(obj) {
	var name = $(obj).text().trim();
	if (name == '管理') {
		Admin = true;
		$(obj).text('取消');
		$("a.del").show();

	} else {
		Admin = false;
		$(obj).text('管理');
		$("a.del").hide();
	}
}

function refreshByType() {
	if (type == 'all') {
		$("tr[data-checked]").show();
	} else if (type == 'enable'){
		$("tr[data-checked='checked']").show();
		$("tr[data-checked='undefined']").hide();

	} else if (type == 'ban'){
		$("tr[data-checked='checked']").hide();
		$("tr[data-checked='undefined']").show();
	}
}

function addPlugin(){
	var str = new Array();
	$('#pluginlist').empty();
	layer.msg("插件加载中...", {icon:16});
	console.log(JSON.stringify(pluginList));
	for(var i in pluginList){
		if(word.length>0) {
			if (pluginList[i].title.indexOf(word)==-1
				&& pluginList[i].title1.indexOf(word)==-1
				&& pluginList[i].title2.indexOf(word)==-1) {
				continue;
			}
		}
		str.push('<tr name="'+pluginList[i].name+'" title="'+pluginList[i].title+'" htmFile="'+pluginList[i].htmFile+'" data-checked="'+pluginList[i].checked+'">');
		str.push('<td title="配置文件: '+pluginList[i].htmFile+'"><label><input type="checkbox" name="'+pluginList[i].name+'" '+pluginList[i].checked+' '+pluginList[i].disabled+'> '+pluginList[i].title+' '+pluginList[i].version);
		str.push('</label>');
		if (pluginList[i].official==1) {
			str.push('<span class="layui-badge layui-bg-blue">'+pluginList[i].flag+'</span>');
		} else {
			str.push('<span class="layui-badge-rim">'+pluginList[i].author  + ' - ' +  pluginList[i].flag+'</span>');
		}
		str.push('<br/>');
		str.push('<span class="describe">'+pluginList[i].describe+'</span>');
		str.push('</td>');
		if (pluginList[i].htmFile == '无') {
			str.push('<td class="right"><a href="javascript:;" class="info" data-i="'+i+'"><span class="layui-icon">&#xe60b;</span></a> <a href="javascript:;" class="del"><span class="layui-icon">&#xe640;</span></a></td>');
		} else {
			str.push('<td class="right"><a href="javascript:;" class="set"><span class="layui-icon">&#xe620;</span></a> <a href="javascript:;" class="info" data-i="'+i+'"><span class="layui-icon">&#xe60b;</span></a> <a href="javascript:;" class="del"><span class="layui-icon">&#xe640;</span></a></td>');
		}

		str.push('</tr>');
		if (pluginList[i].top=='1') {
			$("#pluginlist").prepend(str.join(""));

		} else {
			$("#pluginlist").append(str.join(""));
		}
		str.length = 0;
	}

	$("#pluginlist input[type=checkbox]").click(function(e) {
		if (this.checked) {
			$(this).parent().parent().parent().addClass('ed');
		} else {
			$(this).parent().parent().parent().removeClass('ed');
		}
		parent.SendMsg("EnablePlugin", $(this).attr("name"), this.checked);
	});
	$("a.set").click(function(e) {
		var tr = $(this).parent().parent();
		parent.swtichSet(tr.attr("htmFile"), tr.attr("title"));
	});

	$("a.info").click(function(e) {
		let index = $(this).attr("data-i");
		$("#info td[name='name']").text(pluginList[index].title);
		$("#info td[name='version']").text(pluginList[index].version);
		$("#info td[name='describe']").text(pluginList[index].describe);

		let author = '';
		author = '<span class="layui-badge-rim">'+pluginList[index].author+'</span>';
		//if (pluginList[index].official==1) {
//			author = '<span class="layui-badge layui-bg-blue">'+pluginList[index].author+'</span>';
		//} else {
//			author = '<span class="layui-badge-rim">'+pluginList[index].author+'</span>';
		//}
		$("#info td[name='author']").html(author);


		let flagstr = '';
		if (pluginList[index].official==1) {
			flagstr = '<span class="layui-badge layui-bg-blue">'+pluginList[index].flag+'</span>';
		}
		else
		{
			flagstr = '<span class="layui-badge-rim">'+pluginList[index].flag+'</span>';
		}
		$("#info td[name='flag']").html(flagstr);

		if(pluginList[index].pluginFile != '无')
		{
			$("#info td[name='dllFile']").html('<a href="javascript:;">'+  pluginList[index].pluginFile + '.dll</a>');
		}
		else
		{
			$("#info td[name='dllFile']").html('插件信息读取出错');
		}


		if (pluginList[index].SetFile != '无') {

			$("#info td[name='config']").html('<a href="javascript:;">'+  pluginList[index].SetFile + '.json</a>');
		}else{
			$("#info td[name='config']").html('无');
		}

		$("#info td[name='verRequest']").html( pluginList[index].verRequest);
		$("#info td[name='pluginRequest']").html( pluginList[index].pluginRequest);

		layer.open({
			   title : "插件信息",
			   type  : 1,
			   area  : ['75%', '90%'],
			   fixed : false,
			   maxmin  : false,
			   shadeClose:true,
			   content : $('#info')
			  });
	});

	$("#info td[name='htmFile'],#info td[name='config']").click(function(e){
		parent.SendMsg("openDictionary", $(this).text());//  将当前的插件名
	});

	$("a.del").click(function(e) {
		var tr = $(this).parent().parent();
		var name = tr.attr("name");
		var title = tr.attr("title");
		parent.SendMsg1("delPlugin", name, title);
	});
	$("tr input[type='checkbox']:checked").each(function(index, el) {
		$(el).parent().parent().parent().addClass('ed');
	});

	refreshByType();
	if (Admin == true) {
		$("a.del").show();
	}
	if(word.length>0){
		layer.msg("搜索完毕", {time:500});
	}else{
		layer.msg("插件加载完毕", {time:500});
	}
}

function openSet(title, src) {
	parent.layer.open({
				title	: title,
				type 	: 2,
				area 	: ['750px', '500px'],
				fixed	: false,
				maxmin 	: false,
				shadeClose:true,
				content : ['temp/' + src + '.htm', 'no'],
				end		: function() {
					parent.SendMsg1("Switch", "PluginList");
				}
			});
}

function openFile(){
	parent.SendMsg1('Button', 'openFile', 'openFileCall', '易语言助手插件(*.etools)|*.etools')
}
function openFileCall(fileName) {
	parent.SendMsg1('pluginImport', fileName);
}
</script>
</body>
</html>